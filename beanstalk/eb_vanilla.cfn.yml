AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template ElasticBeanstalk_Simple: Configure
  and launch an AWS Elastic Beanstalk application. **WARNING** This template creates
  one or more Amazon EC2 instances and an Amazon Relational Database Service database
  instance. You will be billed for the AWS resources used if you create a stack from
  this template.'
Parameters:
  OperatorEMail:
    Description: Email address to notify if there are any operational issues
    Default: malliina123@gmail.com
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  GitHubOwner:
    Type: String
    Description: GitHub Owner or User
    Default: malliina
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  GitHubRepository:
    Type: String
    Description: GitHub Repository
    Default: play-docka
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  GitHubAccessToken:
    NoEcho: 'true'
    Type: String
    Description: GitHub Access Token
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  BuildImageRepoName:
    Type: String
    Description: ECR repo name with build images
    Default: build-images
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  BuildImageTag:
    Type: String
    Description: ECR image tag of build image
    Default: 2d22396
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  HealthCheckPath:
    Type: String
    Description: Health check path
    Default: /health
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: .+
    ConstraintDescription: must be a URL.
Mappings:
  Region2Principal:
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    cn-northwest-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
Conditions:
  Is-EC2-VPC: !Or
    - !Equals
      - !Ref AWS::Region
      - eu-central-1
    - !Equals
      - !Ref AWS::Region
      - cn-north-1
  Is-EC2-Classic: !Not
    - !Condition 'Is-EC2-VPC'
Resources:
  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        Comment: Default distro
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          TargetOriginId: !Ref AWS::StackName
          ForwardedValues:
            QueryString: 'true'
            Headers:
              - Authorization
              - Host
            Cookies:
              Forward: all
          TrustedSigners: []
          ViewerProtocolPolicy: allow-all
        Origins:
          - DomainName: !Join
              - ''
              - - ''
                - !GetAtt 'BeanstalkEnvironment.EndpointURL'
            Id: !Ref AWS::StackName
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: http-only
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'
      Tags: []
  WebServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap
                  - Region2Principal
                  - !Ref AWS::Region
                  - EC2Principal
            Action:
              - sts:AssumeRole
      Path: /
  WebServerRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WebServerRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            NotAction: iam:*
            Resource: '*'
      Roles:
        - !Ref WebServerRole
  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref WebServerRole
  BeanstalkApp:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Application
      ApplicationName: !Ref AWS::StackName
  BeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      Description: AWS Elastic Beanstalk Environment running Sample Application
      ApplicationName: !Ref BeanstalkApp
      CNAMEPrefix: !Join
        - '-'
        - - !Ref AWS::StackName
          - url
      EnvironmentName: !Join
        - '-'
        - - !Ref AWS::StackName
          - env
      TemplateName: !Ref BeanstalkConfigurationTemplate
      Tier:
        Name: WebServer
        Type: Standard
        Version: '1.0'
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:application
          OptionName: Application Healthcheck URL
          Value: !Ref HealthCheckPath
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: 'true'
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: RetentionInDays
          Value: 30
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs:health
          OptionName: HealthStreamingEnabled
          Value: 'true'
  BeanstalkConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref BeanstalkApp
      Description: Single-container Docker Configuration
      SolutionStackName: 64bit Amazon Linux 2018.03 v2.12.5 running Docker 18.06.1-ce
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '1'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref InstanceSecurityGroup
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref InstanceType
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref WebServerInstanceProfile
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress: []
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: Is-EC2-VPC
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupName: !Ref InstanceSecurityGroup
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Condition: Is-EC2-Classic
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName: !Ref InstanceSecurityGroup
      GroupDescription: database access
  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email
  AppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Description: Builds the project
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Join
          - ''
          - - !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/'
            - !Ref BuildImageRepoName
            - ':'
            - !Ref BuildImageTag
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: BeanstalkEnvironment
    Properties:
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: MyApp
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                PollForSourceChanges: 'true'
                Branch: master
                OAuthToken: !Ref GitHubAccessToken
              RunOrder: 1
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: MyApp
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref AppCodeBuild
              OutputArtifacts:
                - Name: MyAppBuild
              RunOrder: 1
        - Name: Staging
          Actions:
            - InputArtifacts:
                - Name: MyAppBuild
              Name: !Ref BeanstalkEnvironment
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: ElasticBeanstalk
              OutputArtifacts: []
              Configuration:
                ApplicationName: !Ref AWS::StackName
                EnvironmentName: !Ref BeanstalkEnvironment
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3Bucket
  ArtifactStoreS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub 'arn:aws:s3:::${ArtifactStoreS3Bucket}/*'
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Join
                  - ''
                  - - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/'
                    - !Ref 'BuildImageRepoName'
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactStoreS3Bucket}/*'
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource:
                  - arn:aws:s3:::codepipeline*
                  - arn:aws:s3:::elasticbeanstalk*
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetBucketPolicy
                  - s3:GetObjectAcl
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                  - s3:PutObject
              - Resource: '*'
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:ResumeProcesses
                  - autoscaling:SuspendProcesses
                  - cloudformation:GetTemplate
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - ec2:DescribeInstances
                  - ec2:DescribeImages
                  - ec2:DescribeAddresses
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeKeyPairs
                  - elasticloadbalancing:DescribeLoadBalancers
                  - rds:DescribeDBInstances
                  - rds:DescribeOrderableDBInstanceOptions
                  - sns:ListSubscriptionsByTopic
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                  - iam:PassRole
Outputs:
  BeanstalkURL:
    Description: URL of the AWS Elastic Beanstalk Environment
    Value: !Join
      - ''
      - - http://
        - !GetAtt 'BeanstalkEnvironment.EndpointURL'
  CloudFrontDomain:
    Description: Domain Name of the CloudFront Distribution
    Value: !Join
      - ''
      - - ''
        - !GetAtt 'CloudFront.DomainName'
