AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template: Configure an ECR repo and a GitHub repo.
  **WARNING** This template creates one or more Amazon EC2 instances and an Amazon
  Relational Database Service database instance. You will be billed for the AWS resources
  used if you create a stack from this template.'
Parameters:
  BuildSpecFile:
    Type: String
    Description: Location of buildspec.yml relative to repo root
    Default: build-images/buildspec.yml
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: '[a-zA-Z][-a-zA-Z0-9/.]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  GitHubRepository:
    Type: String
    Description: HTTPS GitHub Repository URL
    Default: https://github.com/malliina/cfn.git
    MinLength: '1'
    MaxLength: '256'
    AllowedPattern: https://[a-zA-Z0-9:/.]*
    ConstraintDescription: must be a URL.
Mappings:
  Region2Principal:
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    cn-northwest-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
Conditions:
  Is-EC2-VPC: !Or
    - !Equals
      - !Ref 'AWS::Region'
      - eu-central-1
    - !Equals
      - !Ref 'AWS::Region'
      - cn-north-1
  Is-EC2-Classic: !Not
    - !Condition 'Is-EC2-VPC'
Resources:
  BuildRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref 'AWS::StackName'
      RepositoryPolicyText:
        Version: '2008-10-17'
        Statement:
          - Sid: CodeBuildAccess
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
  AppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref 'AWS::StackName'
      Description: Builds the project
      ServiceRole: !Ref 'CodeBuildServiceRole'
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Value: !Join
              - ''
              - - !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/'
                - !Ref 'AWS::StackName'
      Source:
        Location: !Ref 'GitHubRepository'
        BuildSpec: !Ref 'BuildSpecFile'
        Type: GITHUB
      TimeoutInMinutes: 30
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Join
                  - ''
                  - - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/'
                    - !Ref 'AWS::StackName'
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
Outputs:
  ECRArn:
    Value: !GetAtt 'BuildRepository.Arn'
